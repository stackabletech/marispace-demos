---
apiVersion: superset.stackable.tech/v1alpha1
kind: SupersetCluster
metadata:
  name: superset
spec:
  image:
    productVersion: 3.1.0
  clusterConfig:
    listenerClass: external-unstable
    credentialsSecret: superset-credentials
    mapboxSecret: superset-mapbox-api-key
    authentication:
      - authenticationClass: keycloak
        oidc:
          clientCredentialsSecret: superset-keycloak-client
        userRegistrationRole: Gamma_extended
  nodes:
    roleGroups:
      default:
        replicas: 1
    podOverrides:
      spec:
        # We need to restore the postgres state before the superset container itself starts some database migrations
        initContainers:
        # The postgres image does not contain curl or wget...
        - name: download-dump
          image: docker.stackable.tech/stackable/testing-tools:0.1.0-stackable0.1.0
          command:
            - bash
            - -c
            - |
              cd /tmp
              curl --fail -O https://raw.githubusercontent.com/stackabletech/demos/feat/end-to-end-security-stack-with-xfsc/stacks/end-to-end-security/postgres_superset_dump.sql.gz
              gunzip postgres_superset_dump.sql.gz

              # We need to omit changing the users password, as otherwise the content in the Secrets does not match
              # the actual password in Postgres.
              grep -vwE '(CREATE ROLE postgres;|CREATE ROLE superset;|ALTER ROLE postgres|ALTER ROLE superset)' postgres_superset_dump.sql > /dump/postgres_superset_dump.sql
          volumeMounts:
            - name: dump
              mountPath: /dump/
        - name: restore-postgres
          image: docker.io/bitnami/postgresql:16.1.0-debian-11-r11 # Same image as the bitnami postgres helm-chart is using
          command:
            - bash
            - -c
            - |
              psql --host postgresql-superset --user postgres < /dump/postgres_superset_dump.sql
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-superset
                  key: postgres-password
          volumeMounts:
            - name: dump
              mountPath: /dump/
        volumes:
          - name: dump
            emptyDir: {}
---
apiVersion: v1
kind: Secret
metadata:
  name: superset-credentials
type: Opaque
stringData:
  adminUser.username: admin
  adminUser.firstname: Superset
  adminUser.lastname: Admin
  adminUser.email: admin@superset.com
  adminUser.password: {{ supersetAdminPassword }}
  connections.secretKey: {{ supersetSecretKey }}
  connections.sqlalchemyDatabaseUri: postgresql://superset:superset@postgresql-superset/superset
---
apiVersion: v1
kind: Secret
metadata:
  name: superset-keycloak-client
stringData:
  clientId: superset
  clientSecret: "{{ keycloakSupersetClientSecret }}"
---
apiVersion: v1
kind: Secret
metadata:
  name: superset-mapbox-api-key
type: Opaque
stringData:
  connections.mapboxApiKey: "pk.eyJ1IjoibXVlbGxlcmNlbGluZSIsImEiOiJjbDZwM3llMTAwNGpmM2psdHU0Y21wZHJwIn0.kXFJKBbeyhbwf0z460JcTQ"
