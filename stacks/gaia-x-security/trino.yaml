---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCluster
metadata:
  name: trino
spec:
  image:
    productVersion: "451"
    stackableVersion: 0.0.0-dev
  clusterConfig:
    listenerClass: external-unstable
    tls:
      serverSecretClass: tls
    catalogLabelSelector:
      matchLabels:
        trino: trino
    authentication:
      - authenticationClass: trino-superset-user-for-impersonation
      - authenticationClass: keycloak
        oidc:
          clientCredentialsSecret: trino-keycloak-client
    authorization:
      opa:
        configMapName: opa
        package: trino
  coordinators:
    roleGroups:
      default:
        replicas: 1
    config:
      logging:
        containers:
          trino:
            loggers:
              io.trino:
                level: DEBUG
    configOverrides:
      config.properties:
        http-server.authentication.oauth2.refresh-tokens: "true"
        http-server.authentication.oauth2.principal-field: sub
  workers:
    roleGroups:
      default:
        replicas: 1
---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCatalog
metadata:
  name: tpcds
  labels:
    trino: trino
spec:
  connector:
    tpcds: {}
---
apiVersion: v1
kind: Secret
metadata:
  name: trino-keycloak-client
stringData:
  clientId: trino
  clientSecret: "{{ keycloakTrinoClientSecret }}"
---
apiVersion: authentication.stackable.tech/v1alpha1
kind: AuthenticationClass
metadata:
  name: trino-superset-user-for-impersonation
spec:
  provider:
    static:
      userCredentialsSecret:
        name: trino-superset-user
---
apiVersion: v1
kind: Secret
metadata:
  name: trino-superset-user
type: kubernetes.io/opaque
stringData:
  superset: "{{ trinoSupersetUserPassword }}"